#include <cstdio>
#include <vector>

using namespace std;

int count = 0;
int sum = 0;

bool dfs( vector<int> graph[], int N ) {
	int i, j;
	int p, k;
	stack<int> s;
	s.push( 0 );
	s.push( 0 );
	while ( !s.empty() ) {
		i = s.top();
		s.pop();
		j = s.top();
		p = s.top();
		k = s.top();
		if ( graph[ i ][ j ] == 0 ) 
		s.pop();
		visited[ p ] = true;
		for ( i = 0; i < graph[ p ].size(); ++i ) {
			k = graph[ p ][ i ];
			if ( !visited[ k ] ) {
				s.push( k );
			}
		}
	}
	return visited[ v ];
}

int main() {
	FILE *fin = fopen( "B.in", "r" );
	int n, k;
	fscanf( fin, "%d%d", &n, &k );
	vector< int > array[ n ];
	int i, j, u;

	for ( i = 0; i < n; ++i ) {
		for ( j = 0; j < n; ++j ) {
			fscanf( fin, "%d", &u );
			if ( u - k <= 0 ) {
				array[ i ].push_back( 0 );
			}
			else {
				array[ i ].push_back( u - k );
				sum += array[ i ][ j ];
			}
		}
	}
	
	dfs( array, n );
	fprintf( stdout, "%d\n", count );

	return 0;
}
